{"version":3,"sources":["./src/app/@core/route-reusable-strategy.ts","./src/app/i18n/i18n.service.ts","./src/app/@core/http/index.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/environments/.env.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/authentication.service.ts","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/credentials.service.ts","./src/app/@shared/index.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home-routing.module.ts","./src/environments/environment.ts","./src/app/@core/error/app-error.ts","./src/app/@core/http/api-auth.interceptor.ts","./src/app/@core/error/index.ts","./src/app/shell/shell.service.ts","./src/app/i18n/index.ts","./src/app/@core/http/http-dispatcher.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/@core/index.ts","./src/app/@core/http/api-prefix.interceptor.ts","./src/app/@core/core.module.ts","./src/app/shell/header/header.component.ts","./src/app/shell/header/header.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/shell/shell.module.ts","./src/app/home/home.module.ts","./src/app/@core/http/cache.interceptor.ts","./src/app/shell/footer/footer.component.ts","./src/app/shell/footer/footer.component.html","./src/app/auth/index.ts","./src/app/@core/error/bad-input.ts","./src/app/@core/logger.service.ts","./src/app/i18n/language-selector.component.ts","./src/app/i18n/language-selector.component.html","./src/app/auth/authentication.guard.ts","./src/app/i18n/i18n.module.ts","./src/app/@shared/loader/loader.component.ts","./src/app/@shared/loader/loader.component.html","./src/app/@shared/shared.module.ts","./src/app/@core/error/not-found-error.ts","./src/app/@core/error/app-error-handler.ts","./src/app/@core/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/@core/http/http.service.ts","./src/app/@core/http/http-cache.service.ts","./src/app/@core/http/error-handler.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * A route strategy allowing for explicit route reuse.\r\n * Used as a workaround for https://github.com/angular/angular/issues/18374\r\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\r\n */\r\n@Injectable()\r\nexport class RouteReusableStrategy extends RouteReuseStrategy {\r\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n\r\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\r\n\r\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n\r\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\r\n    return null;\r\n  }\r\n\r\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n    // Reuse the route if the RouteConfig is the same, or if both routes use the\r\n    // same component, because the latter can have different RouteConfigs.\r\n    return (\r\n      future.routeConfig === curr.routeConfig ||\r\n      Boolean(future.routeConfig?.component && future.routeConfig?.component === curr.routeConfig?.component)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Logger } from '@core/logger.service';\r\nimport enUS from '../../translations/en-US.json';\r\n\r\nconst log = new Logger('I18nService');\r\nconst languageKey = 'language';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class I18nService {\r\n  defaultLanguage!: string;\r\n  supportedLanguages!: string[];\r\n\r\n  private langChangeSubscription!: Subscription;\r\n\r\n  constructor(private translateService: TranslateService) {\r\n    // Embed languages to avoid extra HTTP requests\r\n    translateService.setTranslation('en-US', enUS);\r\n  }\r\n\r\n  /**\r\n   * Initializes i18n for the application.\r\n   * Loads language from local storage if present, or sets default language.\r\n   * @param defaultLanguage The default language to use.\r\n   * @param supportedLanguages The list of supported languages.\r\n   */\r\n  init(defaultLanguage: string, supportedLanguages: string[]) {\r\n    this.defaultLanguage = defaultLanguage;\r\n    this.supportedLanguages = supportedLanguages;\r\n    this.language = '';\r\n\r\n    // Warning: this subscription will always be alive for the app's lifetime\r\n    this.langChangeSubscription = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      localStorage.setItem(languageKey, event.lang);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cleans up language change subscription.\r\n   */\r\n  destroy() {\r\n    if (this.langChangeSubscription) {\r\n      this.langChangeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the current language.\r\n   * Note: The current language is saved to the local storage.\r\n   * If no parameter is specified, the language is loaded from local storage (if present).\r\n   * @param language The IETF language code to set.\r\n   */\r\n  set language(language: string) {\r\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\r\n    let isSupportedLanguage = this.supportedLanguages.includes(language);\r\n\r\n    // If no exact match is found, search without the region\r\n    if (language && !isSupportedLanguage) {\r\n      language = language.split('-')[0];\r\n      language = this.supportedLanguages.find((supportedLanguage) => supportedLanguage.startsWith(language)) || '';\r\n      isSupportedLanguage = Boolean(language);\r\n    }\r\n\r\n    // Fallback if language is not supported\r\n    if (!isSupportedLanguage) {\r\n      language = this.defaultLanguage;\r\n    }\r\n\r\n    log.debug(`Language set to ${language}`);\r\n    this.translateService.use(language);\r\n  }\r\n\r\n  /**\r\n   * Gets the current language.\r\n   * @return The current language code.\r\n   */\r\n  get language(): string {\r\n    return this.translateService.currentLang;\r\n  }\r\n}\r\n","export * from './api-auth.interceptor';\r\nexport * from './api-prefix.interceptor';\r\nexport * from './cache.interceptor';\r\nexport * from './error-handler.interceptor';\r\nexport * from './http-cache.service';\r\nexport * from './http.service';\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss'],\r\n})\r\nexport class ShellComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>","export const env: { [s: string]: (string | null); } = {\n  'npm_package_version': '1.0.0'\n};\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: 'login', component: LoginComponent, data: { title: marker('Login') } }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { Credentials, CredentialsService } from './credentials.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { HttpDispatcherService } from '@core/http/http-dispatcher.service';\r\nexport interface LoginContext {\r\n  userid: string;\r\n  password: string;\r\n  remember?: boolean;\r\n}\r\n\r\nconst routes = {\r\n  login: () => `/token`,\r\n};\r\n\r\n/**\r\n * Provides a base for authentication workflow.\r\n * The login/logout methods should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  private statusCode = 'statusCode';\r\n\r\n  constructor(private credentialsService: CredentialsService, private httpDispatcher: HttpDispatcherService) {}\r\n\r\n  /**\r\n   * Authenticates the user.\r\n   * @param context The login parameters.\r\n   * @return The user credentials.\r\n   */\r\n  login(context: LoginContext) {\r\n    // Replace by proper authentication call\r\n    const data = {\r\n      userid: context.userid,\r\n      token: context.password,\r\n    };\r\n\r\n    const userdData = `username=${context.userid}&grant_type=password&password=${context.password}`;\r\n    return this.httpDispatcher.post<LoginContext>(routes.login(), userdData).pipe(\r\n      tap((responseData: LoginContext) => {\r\n        if (responseData[this.statusCode] === 200) {\r\n          this.credentialsService.setCredentials(responseData['token'], context.remember);\r\n          return responseData['token'];\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logs out the user and clear credentials.\r\n   * @return True if the user was logged out successfully.\r\n   */\r\n  logout(): Observable<boolean> {\r\n    // Customize credentials invalidation here\r\n    this.credentialsService.setCredentials();\r\n    return of(true);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { environment } from '@env/environment';\r\nimport { Logger, UntilDestroy, untilDestroyed } from '@core';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { CredentialsService } from './credentials.service';\r\n\r\nconst log = new Logger('Login');\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  version: string | null = environment.version;\r\n  error: string | undefined;\r\n  loginForm!: FormGroup;\r\n  isLoading = false;\r\n\r\n  showLogin: boolean = true;\r\n  showForgotPass: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private authenticationService: AuthenticationService,\r\n    private readonly credentialService: CredentialsService\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  login() {\r\n    this.isLoading = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      const login$ = this.authenticationService.login(this.loginForm.value);\r\n      login$\r\n        .pipe(\r\n          finalize(() => {\r\n            this.loginForm.markAsPristine();\r\n            this.isLoading = false;\r\n          }),\r\n          untilDestroyed(this)\r\n        )\r\n        .subscribe(\r\n          (credentials: any) => {\r\n            log.debug('Login Component: (Success) -  ', credentials);\r\n\r\n            this.credentialService.setCredentials(credentials['access_token'], this.loginForm.value['rememberMe']);\r\n\r\n            this.router.navigate([this.route.snapshot.queryParams.redirect || '/home'], { replaceUrl: true });\r\n          },\r\n          (error) => {\r\n            log.debug(`Login error: ${error}`);\r\n            this.error = error;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  private createForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      userid: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      remember: true,\r\n    });\r\n  }\r\n}\r\n","<div id=\"page\" data-swup=\"0\">\r\n  <div class=\"page-content pb-0\">\r\n    <div\r\n      data-card-height=\"cover-full\"\r\n      class=\"card mb-0\"\r\n      style=\"background-image: url('/assets/theme/images/sign-in-bg.jpeg'); height: 668px\"\r\n    >\r\n      <div class=\"card-center login-card\" *ngIf=\"showLogin\">\r\n        <div class=\"text-center\">\r\n          <p class=\"font-600 color-highlight mb-1 font-16\">Let's Get Started</p>\r\n          <!-- <h1 class=\"color-white\" translate>APP_NAME</h1> -->\r\n          <h4 class=\"font-24 color-white\">Sign In</h4>\r\n        </div>\r\n        <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\r\n          <div class=\"alert alert-danger\" [hidden]=\"!error || isLoading\" translate>User id or password incorrect.</div>\r\n          <div class=\"content px-4\">\r\n            <div class=\"input-style input-transparent no-borders has-icon validate-field mb-4\">\r\n              <i class=\"fa fa-user\"></i>\r\n\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control validate-userid\"\r\n                id=\"UserId\"\r\n                formControlName=\"userid\"\r\n                autocomplete=\"userid\"\r\n                [placeholder]=\"'User id' | translate\"\r\n              />\r\n              <label for=\"UserId\" class=\"color-highlight\">User id</label>\r\n\r\n              <i class=\"fa fa-times disabled invalid color-red-dark\"></i>\r\n              <i class=\"fa fa-check disabled valid color-green-dark\"></i>\r\n              <em>(required)</em>\r\n            </div>\r\n            <div class=\"input-style input-transparent no-borders has-icon validate-field mb-4\">\r\n              <i class=\"fa fa-lock\"></i>\r\n\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control validate-password\"\r\n                id=\"Password\"\r\n                formControlName=\"password\"\r\n                autocomplete=\"current-password\"\r\n                [placeholder]=\"'Password' | translate\"\r\n                required\r\n              />\r\n              <label for=\"form1a\" class=\"color-highlight\">Password</label>\r\n\r\n              <i class=\"fa fa-times disabled invalid color-red-dark\"></i>\r\n              <i class=\"fa fa-check disabled valid color-green-dark\"></i>\r\n              <em>(required)</em>\r\n            </div>\r\n\r\n            <button\r\n              class=\"btn btn-full btn-l font-600 font-13 bg-blue-dark mt-4 rounded-s w-100\"\r\n              type=\"submit\"\r\n              [disabled]=\"loginForm.invalid || isLoading\"\r\n            >\r\n              <i class=\"fas fa-cog fa-spin\" [hidden]=\"!isLoading\"></i>\r\n              <span translate>Sign in</span>\r\n            </button>\r\n\r\n            <div class=\"row pt-3 mb-3\">\r\n              <div class=\"col-6 text-start font-11\">\r\n                <a\r\n                  class=\"color-white opacity-50 show-offline\"\r\n                  (click)=\"showLogin = false; showForgotPass = true\"\r\n                  href=\"javascript:void(0)\"\r\n                  >Forgot Password?</a\r\n                >\r\n              </div>\r\n              <!-- <div class=\"col-6 text-end font-11\">\r\n                <a class=\"color-white opacity-50 show-offline\" href=\"page-signup-2.html\">Create Account</a>\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"card-center forgot-password\" *ngIf=\"showForgotPass\">\r\n        <div class=\"text-center\">\r\n          <p class=\"font-600 color-highlight mb-1 font-16\">Reset Password</p>\r\n          <h4 class=\"font-24 color-white\">Forgot</h4>\r\n          <p class=\"boxed-text-xl color-white opacity-50 pt-3 font-15\">\r\n            Enter your email account associated with your account and we'll send you the reset instructions!\r\n          </p>\r\n        </div>\r\n        <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\r\n          <div class=\"content px-4\">\r\n            <div class=\"input-style input-transparent no-borders has-icon validate-field mb-4\">\r\n              <i class=\"fa fa-at\"></i>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control validate-name\"\r\n                id=\"form1a\"\r\n                formControlName=\"userid\"\r\n                autocomplete=\"userid\"\r\n                [placeholder]=\"'User id' | translate\"\r\n              />\r\n              <label for=\"form1a\" class=\"color-highlight\">Email</label>\r\n              <i class=\"fa fa-times disabled invalid color-red-dark\"></i>\r\n              <i class=\"fa fa-check disabled valid color-green-dark\"></i>\r\n              <em>(required)</em>\r\n            </div>\r\n            <a href=\"#\" class=\"btn btn-full btn-l font-600 font-13 bg-blue-dark mt-4 rounded-s w-100\">Reset Password</a>\r\n            <div class=\"row pt-3 mb-3\">\r\n              <div class=\"col-6 text-start font-11\">\r\n                <a\r\n                  class=\"color-white opacity-50\"\r\n                  (click)=\"showLogin = true; showForgotPass = false\"\r\n                  href=\"javascript:void(0)\"\r\n                  >Sign In</a\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"card-overlay bg-black opacity-85\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Credentials {\r\n  // Customize received credentials here\r\n  userid: string;\r\n  token: string;\r\n}\r\n\r\nconst credentialsKey = 'credentials';\r\n\r\n/**\r\n * Provides storage for authentication credentials.\r\n * The Credentials interface should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CredentialsService {\r\n  private _credentials: Credentials | null = null;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this._credentials = JSON.parse(savedCredentials);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks is the user is authenticated.\r\n   * @return True if the user is authenticated.\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n\r\n  /**\r\n   * Gets the user credentials.\r\n   * @return The user credentials or null if the user is not authenticated.\r\n   */\r\n  get credentials(): Credentials | null {\r\n    return this._credentials;\r\n  }\r\n\r\n  /**\r\n   * Sets the user credentials.\r\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\r\n   * Otherwise, the credentials are only persisted for the current session.\r\n   * @param credentials The user credentials.\r\n   * @param remember True to remember credentials across sessions.\r\n   */\r\n  setCredentials(credentials?: Credentials, remember?: boolean) {\r\n    this._credentials = credentials || null;\r\n\r\n    if (credentials) {\r\n      const storage = remember ? localStorage : sessionStorage;\r\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\r\n    } else {\r\n      sessionStorage.removeItem(credentialsKey);\r\n      localStorage.removeItem(credentialsKey);\r\n    }\r\n  }\r\n}\r\n","export * from './shared.module';\r\nexport * from './loader/loader.component';\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '@app/@core/models/users.model';\r\nimport { UserService } from '@app/@core/services/user.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isLoading = false;\r\n\r\n  constructor( private userService: UserService) {}\r\n\r\n  whoAmI: User;\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n\r\n    this.userService.whoAmI().subscribe(\r\n      (response) =>{\r\n        this.whoAmI = response[0];\r\n        console.log(this.whoAmI)\r\n      }\r\n    )\r\n\r\n  }\r\n}\r\n","<div class=\"cus-container\">\r\n\r\n\r\n\r\n    <div class=\"card card-style mb-4\" style=\"height: 200px;background-image: url(https://kj1bcdn.b-cdn.net/media/47129/covid-19_0.jpg);\">\r\n        <div class=\"card-top mt-3 ms-3 me-3\">\r\n            <h3 class=\"color-white font-20 font-700\">Stay Safe Stay Home</h3>\r\n            <p class=\"color-white font-14\">Profile is almost setup. One thing left.</p>\r\n        </div>\r\n        <div class=\"card-bottom ms-3 me-3 mb-3\">\r\n            <p class=\"color-white font-14\">Profile is almost setup. One thing left.</p>\r\n        </div>\r\n        <div class=\"card-overlay bg-red-dark opacity-50\"></div>\r\n    </div>\r\n\r\n    <div class=\"card card-style bg-11\" style=\"height: 160px;\">\r\n        <div class=\"card-bottom ps-3 pb-3\">\r\n            <h1 class=\"font-17 color-white mb-4\">At a Glance</h1>\r\n            <div class=\"d-flex\">\r\n                <div class=\"pe-3\">\r\n                    <h5 class=\"color-white\">15k</h5>\r\n                    <h6 class=\"color-white opacity-60\">Visits</h6>\r\n                </div>\r\n                <div class=\"pe-3\">\r\n                    <h5 class=\"color-white\">14k</h5>\r\n                    <h6 class=\"color-white opacity-60\">Sales</h6>\r\n                </div>\r\n                <div class=\"ms-auto text-end pe-3\">\r\n                    <h5 class=\"color-white\">$15.315</h5>\r\n                    <h6 class=\"color-white opacity-60\">Total Earnings</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-overlay bg-black opacity-80\"></div>\r\n    </div>\r\n\r\n    <div class=\"content mb-0 mt-3\">\r\n        <div class=\"row mb-0\">\r\n            <div class=\"col-12 mb-3\">\r\n                <div class=\"card card-style mx-0 mb-2 p-3\">\r\n                    <h6 class=\"font-14\">Attendance</h6>\r\n                    <h3 class=\"color-green-dark mb-0 font-20\">+31.2%</h3>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"card card-style mx-0 mb-2 p-3\">\r\n                    <h6 class=\"font-14\">Leaves</h6>\r\n                    <h3 class=\"color-red-dark mb-0 font-20\">-14.5%</h3>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"card card-style mx-0 p-3\">\r\n                    <h6 class=\"font-14\">Late Marks</h6>\r\n                    <h3 class=\"color-brown-dark mb-0 font-20\">+11.2%</h3>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { Shell } from '@app/shell/shell.service';\r\n\r\nconst routes: Routes = [\r\n  Shell.childRoutes([\r\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent, data: { title: marker('Home') } },\r\n  ]),\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n})\r\nexport class HomeRoutingModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n// `.env.ts` is generated by the `npm run env` command\r\n// `npm run env` exposes environment variables as JSON for any usage you might\r\n// want, like displaying the version or getting extra config from your CI bot, etc.\r\n// This is useful for granularity you might need beyond just the environment.\r\n// Note that as usual, any environment variables you expose through it will end up in your\r\n// bundle, and you should not use it for any sensitive information like passwords or keys.\r\nimport { env } from './.env';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  version: env.npm_package_version,\r\n  serverUrl: 'http://103.233.79.87/beeduapi',\r\n  defaultLanguage: 'en-US',\r\n  supportedLanguages: ['en-US'],\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class AppError {\r\n  constructor(public originalError?: any) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@env/environment';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CredentialsService } from '@app/auth/credentials.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiAuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private readonly credentialsService: CredentialsService,\r\n    private router: Router,\r\n    private state: ActivatedRoute\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const userToken = this.credentialsService.credentials;\r\n    if (userToken && request.url.startsWith(environment.serverUrl)) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${userToken}`,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        () => {},\r\n        (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            if (err.status === 403) {\r\n              this.credentialsService.setCredentials(null);\r\n              this.router.navigate(['/login'], { queryParams: { redirect: this.state.url }, replaceUrl: true });\r\n            }\r\n          }\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","export * from './app-error-handler';\r\nexport * from './app-error';\r\nexport * from './bad-input';\r\nexport * from './not-found-error';\r\n","import { Routes, Route } from '@angular/router';\r\n\r\nimport { AuthenticationGuard } from '@app/auth';\r\nimport { ShellComponent } from './shell.component';\r\n\r\n/**\r\n * Provides helper methods to create routes.\r\n */\r\nexport class Shell {\r\n  /**\r\n   * Creates routes using the shell component and authentication.\r\n   * @param routes The routes to add.\r\n   * @return The new route using shell as the base.\r\n   */\r\n  static childRoutes(routes: Routes): Route {\r\n    return {\r\n      path: '',\r\n      component: ShellComponent,\r\n      children: routes,\r\n      canActivate: [AuthenticationGuard],\r\n    };\r\n  }\r\n}\r\n","export * from './i18n.module';\r\nexport * from './i18n.service';\r\nexport * from './language-selector.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Logger } from '../logger.service';\r\n\r\nconst log = new Logger('HttpDispatcherService');\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpDispatcherService {\r\n  constructor(private readonly httpClient: HttpClient) {}\r\n\r\n  get<T>(url: string): Observable<T> {\r\n    return this.httpClient.get<T>(url).pipe(\r\n      map((response) => {\r\n        return response['error'] && response['error']['statusCode'] != 200 ? response['error']['message'] : response;\r\n      }),\r\n      tap((item) => {\r\n        if (item) {\r\n          return item;\r\n        }\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  post<T>(url: string, body: any): Observable<T> {\r\n    return this.httpClient.post<T>(url, body).pipe(\r\n      tap((responseData: any) => {\r\n        return responseData;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  put<T>(url: string, body: any): Observable<T> {\r\n    return this.httpClient.put<T>(url, body).pipe(\r\n      tap((responseData: any) => {\r\n        return responseData;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  delete<T>(url: string): Observable<T> {\r\n    return this.httpClient.delete<T>(url).pipe(\r\n      tap((responseData: any) => {\r\n        return responseData;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    log.error('An error occurred (dispatcher):', error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { merge } from 'rxjs';\r\nimport { filter, map, switchMap } from 'rxjs/operators';\r\n\r\nimport { environment } from '@env/environment';\r\nimport { Logger, UntilDestroy, untilDestroyed } from '@core';\r\nimport { I18nService } from '@app/i18n';\r\n\r\nconst log = new Logger('App');\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title,\r\n    private translateService: TranslateService,\r\n    private i18nService: I18nService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Setup logger\r\n    if (environment.production) {\r\n      Logger.enableProductionMode();\r\n    }\r\n\r\n    log.debug('init');\r\n\r\n    // Setup translations\r\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\r\n\r\n    const onNavigationEnd = this.router.events.pipe(filter((event) => event instanceof NavigationEnd));\r\n\r\n    // Change page title on navigation or language change, based on route data\r\n    merge(this.translateService.onLangChange, onNavigationEnd)\r\n      .pipe(\r\n        map(() => {\r\n          let route = this.activatedRoute;\r\n          while (route.firstChild) {\r\n            route = route.firstChild;\r\n          }\r\n          return route;\r\n        }),\r\n        filter((route) => route.outlet === 'primary'),\r\n        switchMap((route) => route.data),\r\n        untilDestroyed(this)\r\n      )\r\n      .subscribe((event) => {\r\n        const title = event.title;\r\n        if (title) {\r\n          this.titleService.setTitle(this.translateService.instant(title));\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.i18nService.destroy();\r\n  }\r\n}\r\n","<div id=\"page\">\r\n    <router-outlet></router-outlet>\r\n</div>","export * from './core.module';\r\nexport * from './http/api-prefix.interceptor';\r\nexport * from './http/error-handler.interceptor';\r\nexport * from './route-reusable-strategy';\r\nexport * from './logger.service';\r\nexport * from '@ngneat/until-destroy';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@env/environment';\r\n\r\n/**\r\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiPrefixInterceptor implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (!/^(http|https):/i.test(request.url)) {\r\n      request = request.clone({ url: environment.serverUrl + request.url });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { ErrorHandler, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { HttpService } from './http';\r\nimport { AppErrorHandler } from './error';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule, TranslateModule, RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HttpClient,\r\n      useClass: HttpService,\r\n    },\r\n    { provide: ErrorHandler, useClass: AppErrorHandler }, // Replacing Default Error Handler with Custom.\r\n  ],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    // Import guard\r\n    if (parentModule) {\r\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostListener, Inject  } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { User } from '@app/@core/models/users.model';\r\nimport { UserService } from '@app/@core/services/user.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  menuHidden = true;\r\n  isLoading: boolean;\r\n  whoAmI: User;\r\n\r\n  // constructor(\r\n  //   private router: Router,\r\n  //   private authenticationService: AuthenticationService,\r\n  //   private credentialsService: CredentialsService\r\n  // ) {}\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, private userService: UserService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.userService.whoAmI().subscribe(\r\n      (response) =>{\r\n        this.whoAmI = response[0];\r\n        console.log(this.whoAmI)\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    if (document.body.scrollTop > 20 ||     \r\n    document.documentElement.scrollTop > 20) {\r\n      document.getElementById('fixedHeader').classList.add('header-active');\r\n    }\r\n    else{\r\n      document.getElementById('fixedHeader').classList.remove('header-active');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"header header-auto-show header-fixed header-logo-center\" id=\"fixedHeader\">\r\n    <a href=\"index.html\" class=\"header-title\">Beedu Connect</a>\r\n    <a routerLink=\"../alerts\" class=\"header-icon header-icon-1\"><i class=\"fas fa-chevron-left\"></i></a>\r\n    <a href=\"#\" class=\"header-icon header-icon-4\">\r\n        <img [src]=whoAmI.Photo1 class=\"rounded-circle shadow-l mr-3\" width=\"30\">\r\n\r\n    </a>\r\n    <!-- <a href=\"#\" data-menu=\"menu-share\" class=\"header-icon header-icon-3\"><i class=\"fas fa-share-alt\"></i></a> -->\r\n</div>\r\n\r\n<div class=\"page-title page-title-fixed\" id=\"subTitle\">\r\n    <div class=\"d-flex ml-3\">\r\n        <div>\r\n            <img [src]=whoAmI.Photo1 class=\"rounded-circle shadow-l\" width=\"50\">\r\n        </div>\r\n        <div class=\"mt-3\">\r\n            <p class=\"font-12 mt-n1\">{{whoAmI.Name}}</p>\r\n        </div>\r\n    </div>\r\n    <a routerLink=\"../alerts\" class=\"page-title-icon bg-theme color-theme\">\r\n        <i class=\"fas fa-radiation\"></i>\r\n    </a>\r\n    <a href=\"#\" class=\"page-title-icon bg-theme color-theme\" data-toggle-theme>\r\n        <i class=\"fa fa-bell\"></i>\r\n    </a>\r\n    <!-- <a href=\"#\" class=\"page-title-icon bg-theme color-theme\" data-menu=\"menu-main\"><i class=\"fa fa-bars\"></i></a> -->\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { I18nModule } from '@app/i18n';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, TranslateModule, NgbModule, I18nModule, AuthRoutingModule],\r\n  declarations: [LoginComponent],\r\n})\r\nexport class AuthModule {}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { environment } from '@env/environment';\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { AuthModule } from '@app/auth';\nimport { HomeModule } from './home/home.module';\nimport { ShellModule } from './shell/shell.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot(),\n    NgbModule,\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    HomeModule,\n    AuthModule,\n    AppRoutingModule,\n    // must be imported as the last module as it contains the fallback route\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { I18nModule } from '@app/i18n';\r\nimport { AuthModule } from '@app/auth';\r\nimport { ShellComponent } from './shell.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule, NgbModule, AuthModule, I18nModule, RouterModule],\r\n  declarations: [HeaderComponent, ShellComponent, FooterComponent],\r\n})\r\nexport class ShellModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { SharedModule } from '@shared';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { HomeComponent } from './home.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule, SharedModule, HomeRoutingModule],\r\n  declarations: [HomeComponent],\r\n})\r\nexport class HomeModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subscriber } from 'rxjs';\r\n\r\nimport { HttpCacheService } from './http-cache.service';\r\n\r\n/**\r\n * Caches HTTP requests.\r\n * Use ExtendedHttpClient fluent API to configure caching for each request.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n  private forceUpdate = false;\r\n\r\n  constructor(private httpCacheService: HttpCacheService) {}\r\n\r\n  /**\r\n   * Configures interceptor options\r\n   * @param options If update option is enabled, forces request to be made and updates cache entry.\r\n   * @return The configured instance.\r\n   */\r\n  configure(options?: { update?: boolean } | null): CacheInterceptor {\r\n    const instance = new CacheInterceptor(this.httpCacheService);\r\n    if (options && options.update) {\r\n      instance.forceUpdate = true;\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (request.method !== 'GET') {\r\n      return next.handle(request);\r\n    }\r\n\r\n    return new Observable((subscriber: Subscriber<HttpEvent<any>>) => {\r\n      const cachedData = this.forceUpdate ? null : this.httpCacheService.getCacheData(request.urlWithParams);\r\n      if (cachedData !== null) {\r\n        // Create new response to avoid side-effects\r\n        subscriber.next(new HttpResponse(cachedData as object));\r\n        subscriber.complete();\r\n      } else {\r\n        next.handle(request).subscribe(\r\n          (event) => {\r\n            if (event instanceof HttpResponse) {\r\n              this.httpCacheService.setCacheData(request.urlWithParams, event);\r\n            }\r\n            subscriber.next(event);\r\n          },\r\n          (error) => subscriber.error(error),\r\n          () => subscriber.complete()\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '@app/@core/models/users.model';\r\nimport { UserService } from '@app/@core/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  whoAmI: User;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  isshowMenu = false;\r\n  ngOnInit() {\r\n    this.userService.whoAmI().subscribe(\r\n      (response: any[]) =>{\r\n        this.whoAmI = response[0];\r\n        console.log(this.whoAmI)\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  showMenu(){\r\n    document.getElementById(\"menu-main\").classList.add(\"menu-active\");\r\n  }\r\n\r\n  hideMenu(){\r\n    document.getElementById(\"menu-main\").classList.remove(\"menu-active\");\r\n  }\r\n}\r\n","<div id=\"footer-bar\" class=\"footer-bar-6\">\r\n    <button class=\"active-nav\" routerLink=\"/\">\r\n        <i class=\"fas fa-podcast\"></i>\r\n        <span>Dashboard</span>\r\n    </button>\r\n    <button>\r\n        <i class=\"fab fa-pied-piper-square\"></i>\r\n        <span>News Feed</span>\r\n    </button>\r\n    <button>\r\n        <i class=\"fas fa-user-circle\"></i>\r\n        <span>Profile</span>\r\n    </button>\r\n    <button (click)=\"showMenu()\">\r\n        <i class=\"fab fa-mendeley\"></i>\r\n        <span>Menu</span>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"page-title-clear\"></div>\r\n<div id=\"menu-main\" class=\"menu menu-box-left\">\r\n    <div class=\"card rounded-0 bg-6\" style=\"height: 250px\">\r\n        <div class=\"card-top\">\r\n            <button class=\"close-menu float-end me-2 text-center mt-3 icon-40 notch-clear\" (click)=\"hideMenu()\">\r\n                <i class=\"fa fa-times color-white\"></i>\r\n            </button>\r\n        </div>\r\n        <div class=\"card-bottom\">\r\n            <h1 class=\"color-white ps-3 mb-n1 font-20\">{{whoAmI.Name}}</h1>\r\n            <p class=\"mb-2 ps-3 font-12 color-white opacity-50\">{{whoAmI.CollegeName}}</p>\r\n        </div>\r\n        <div class=\"card-overlay bg-gradient\"></div>\r\n    </div>\r\n    <div class=\"list-group list-custom-small list-menu\">\r\n        <a id=\"nav-welcome\" href=\"page-store-food.html\" class=\"active-nav\">\r\n            <i class=\"fa fa-tachometer gradient-red color-white\"></i>\r\n            <span>Dashboard</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-homepages\" href=\"page-store-food.html\">\r\n            <i class=\"fas fa-calendar-alt gradient-green color-white\"></i>\r\n            <span>Calendar</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-components\" href=\"page-store-food.html\">\r\n            <i class=\"fas fa-comment gradient-blue color-white\"></i>\r\n            <span>Communication</span><i class=\"-plus\"></i>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-pages\" href=\"page-store-food.html\">\r\n            <i class=\"fas fa-table gradient-brown color-white\"></i>\r\n            <span>Time Table</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-media\" href=\"page-store-food.html\">\r\n            <i class=\"fas fa-chalkboard-teacher gradient-magenta color-white\"></i>\r\n            <span>Online Learning</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-contact\" href=\"page-store-food.html\">\r\n            <i class=\"fa fa-university gradient-orange color-white\"></i>\r\n            <span>Examination</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-contact\" href=\"page-store-food.html\">\r\n            <i class=\"fa fa-fingerprint gradient-yellow color-white\"></i>\r\n            <span>Attendance</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a id=\"nav-contact\" href=\"page-store-food.html\">\r\n            <i class=\"fa fa-rupee-sign gradient-pink color-white\"></i>\r\n            <span>Fees</span>\r\n            <i class=\"fa fa-angle-right\"></i>\r\n        </a>\r\n        <a href=\"#\" data-toggle-theme=\"\" data-trigger-switch=\"switch-dark-mode\">\r\n            <i class=\"fa fa-moon gradient-dark color-white\"></i>\r\n            <span>Dark Mode</span>\r\n            <div class=\"custom-control small-switch ios-switch\">\r\n                <input data-toggle-theme=\"\" type=\"checkbox\" class=\"ios-input\" id=\"toggle-dark-menu\">\r\n                <label class=\"custom-control-label\" for=\"toggle-dark-menu\"></label>\r\n            </div>\r\n        </a>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"menu-share\" class=\"menu menu-box-bottom menu-box-detached\">\r\n    <div class=\"menu-title mt-n1\">\r\n        <h1>Share the Love</h1>\r\n        <p class=\"color-highlight\">Just Tap the Social Icon. We'll add the Link</p>\r\n        <a href=\"#\" class=\"close-menu\"><i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n    <div class=\"content mb-0\">\r\n        <div class=\"divider mb-0\"></div>\r\n        <div class=\"list-group list-custom-small list-icon-0\">\r\n            <a href=\"auto_generated.html\" class=\"shareToFacebook external-link\">\r\n                <i class=\"font-18 fab fa-facebook-square color-facebook\"></i>\r\n                <span class=\"font-13\">Facebook</span>\r\n                <i class=\"fa fa-angle-right\"></i>\r\n            </a>\r\n            <a href=\"auto_generated.html\" class=\"shareToTwitter external-link\">\r\n                <i class=\"font-18 fab fa-twitter-square color-twitter\"></i>\r\n                <span class=\"font-13\">Twitter</span>\r\n                <i class=\"fa fa-angle-right\"></i>\r\n            </a>\r\n            <a href=\"auto_generated.html\" class=\"shareToLinkedIn external-link\">\r\n                <i class=\"font-18 fab fa-linkedin color-linkedin\"></i>\r\n                <span class=\"font-13\">LinkedIn</span>\r\n                <i class=\"fa fa-angle-right\"></i>\r\n            </a>\r\n            <a href=\"auto_generated.html\" class=\"shareToWhatsApp external-link\">\r\n                <i class=\"font-18 fab fa-whatsapp-square color-whatsapp\"></i>\r\n                <span class=\"font-13\">WhatsApp</span>\r\n                <i class=\"fa fa-angle-right\"></i>\r\n            </a>\r\n            <a href=\"auto_generated.html\" class=\"shareToMail external-link border-0\">\r\n                <i class=\"font-18 fa fa-envelope-square color-mail\"></i>\r\n                <span class=\"font-13\">Email</span>\r\n                <i class=\"fa fa-angle-right\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"menu-hider\"></div>","export * from './auth.module';\r\nexport * from './authentication.service';\r\nexport * from './credentials.service';\r\nexport * from './authentication.guard';\r\n","import { AppError } from './app-error';\r\n\r\nexport class BadInput extends AppError {}\r\n","/**\r\n * Simple logger system with the possibility of registering custom outputs.\r\n *\r\n * 4 different log levels are provided, with corresponding methods:\r\n * - debug   : for debug information\r\n * - info    : for informative status of the application (success, ...)\r\n * - warning : for non-critical errors that do not prevent normal application behavior\r\n * - error   : for critical errors that prevent normal application behavior\r\n *\r\n * Example usage:\r\n * ```\r\n * import { Logger } from 'app/core/logger.service';\r\n *\r\n * const log = new Logger('myFile');\r\n * ...\r\n * log.debug('something happened');\r\n * ```\r\n *\r\n * To disable debug and info logs in production, add this snippet to your root component:\r\n * ```\r\n * export class AppComponent implements OnInit {\r\n *   ngOnInit() {\r\n *     if (environment.production) {\r\n *       Logger.enableProductionMode();\r\n *     }\r\n *     ...\r\n *   }\r\n * }\r\n *\r\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\r\n */\r\n\r\n/**\r\n * The possible log levels.\r\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\r\n */\r\nexport enum LogLevel {\r\n  Off = 0,\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Debug,\r\n}\r\n\r\n/**\r\n * Log output handler function.\r\n */\r\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\r\n\r\nexport class Logger {\r\n  /**\r\n   * Current logging level.\r\n   * Set it to LogLevel.Off to disable logs completely.\r\n   */\r\n  static level = LogLevel.Debug;\r\n\r\n  /**\r\n   * Additional log outputs.\r\n   */\r\n  static outputs: LogOutput[] = [];\r\n\r\n  /**\r\n   * Enables production mode.\r\n   * Sets logging level to LogLevel.Warning.\r\n   */\r\n  static enableProductionMode() {\r\n    Logger.level = LogLevel.Warning;\r\n  }\r\n\r\n  constructor(private source?: string) {}\r\n\r\n  /**\r\n   * Logs messages or objects  with the debug level.\r\n   * Works the same as console.log().\r\n   */\r\n  debug(...objects: any[]) {\r\n    this.log(console.log, LogLevel.Debug, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the info level.\r\n   * Works the same as console.log().\r\n   */\r\n  info(...objects: any[]) {\r\n    this.log(console.info, LogLevel.Info, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the warning level.\r\n   * Works the same as console.log().\r\n   */\r\n  warn(...objects: any[]) {\r\n    this.log(console.warn, LogLevel.Warning, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the error level.\r\n   * Works the same as console.log().\r\n   */\r\n  error(...objects: any[]) {\r\n    this.log(console.error, LogLevel.Error, objects);\r\n  }\r\n\r\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\r\n    if (level <= Logger.level) {\r\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\r\n      func.apply(console, log);\r\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level, ...objects]));\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { I18nService } from './i18n.service';\r\n\r\n@Component({\r\n  selector: 'app-language-selector',\r\n  templateUrl: './language-selector.component.html',\r\n  styleUrls: ['./language-selector.component.scss'],\r\n})\r\nexport class LanguageSelectorComponent implements OnInit {\r\n  @Input() inNavbar = false;\r\n  @Input() menuClass = '';\r\n\r\n  constructor(private i18nService: I18nService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  setLanguage(language: string) {\r\n    this.i18nService.language = language;\r\n  }\r\n\r\n  get currentLanguage(): string {\r\n    return this.i18nService.language;\r\n  }\r\n\r\n  get languages(): string[] {\r\n    return this.i18nService.supportedLanguages;\r\n  }\r\n}\r\n","<div [ngClass]=\"{ 'nav-item': inNavbar }\" ngbDropdown>\r\n  <a *ngIf=\"inNavbar; else button\" id=\"language-dropdown\" class=\"nav-link\" ngbDropdownToggle>\r\n    {{ currentLanguage | translate }}\r\n  </a>\r\n  <ng-template #button>\r\n    <button id=\"language-dropdown\" class=\"btn btn-sm btn-secondary\" ngbDropdownToggle>\r\n      {{ currentLanguage }}\r\n    </button>\r\n  </ng-template>\r\n  <div ngbDropdownMenu aria-labelledby=\"language-dropdown\" [ngClass]=\"menuClass\">\r\n    <button class=\"dropdown-item\" *ngFor=\"let language of languages\" (click)=\"setLanguage(language)\">\r\n      {{ language | translate }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { Logger } from '@core';\r\nimport { CredentialsService } from './credentials.service';\r\n\r\nconst log = new Logger('AuthenticationGuard');\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(private router: Router, private credentialsService: CredentialsService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.credentialsService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n\r\n    log.debug('Not authenticated, redirecting and adding redirect url...');\r\n    this.router.navigate(['/login'], { queryParams: { redirect: state.url }, replaceUrl: true });\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { LanguageSelectorComponent } from './language-selector.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TranslateModule, NgbModule],\r\n  declarations: [LanguageSelectorComponent],\r\n  exports: [LanguageSelectorComponent],\r\n})\r\nexport class I18nModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.scss'],\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n  @Input() isLoading = false;\r\n  @Input() message: string | undefined;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\r\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoaderComponent } from './loader/loader.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [LoaderComponent],\r\n  exports: [LoaderComponent],\r\n})\r\nexport class SharedModule {}\r\n","import { AppError } from './app-error';\r\n\r\nexport class NotFoundError extends AppError {}\r\n","import { ErrorHandler, NgZone, Injectable, Injector, Inject } from '@angular/core';\r\n\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AppError } from './app-error';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Logger } from '../logger.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nconst log = new Logger('AppErrorHandler');\r\n\r\n@Injectable()\r\nexport class AppErrorHandler implements ErrorHandler {\r\n  constructor(\r\n    @Inject(Injector) private readonly injector: Injector,\r\n    private ngZone: NgZone,\r\n    private translateService: TranslateService\r\n  ) {}\r\n\r\n  handleError(error: HttpErrorResponse): void {\r\n    let message: any = null;\r\n\r\n    console.log('-----IN APP ERROR HANDLER Starts------');\r\n    console.error(error);\r\n    console.log('-----IN APP ERROR HANDLER Ends------');\r\n\r\n    // tslint:disable:triple-equals\r\n    // if (error instanceof AppError) {\r\n    //   message = error.originalError;\r\n    // } else if (typeof error == 'string') {\r\n    //   message = error;\r\n    // } else if (error && error.status != undefined) {\r\n    //   message = error.status;\r\n    // }\r\n    //  else {\r\n    //   message = 'An unexpected error occured.';\r\n    // }\r\n\r\n    message = this.translateService.instant(error.message);\r\n\r\n    try {\r\n      this.ngZone.run(() => {\r\n        this.toastrService.error(message, 'Error!', { onActivateTick: true });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  private get toastrService(): ToastrService {\r\n    return this.injector.get(ToastrService);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpDispatcherService } from '../http/http-dispatcher.service';\r\nimport { User } from '../models/users.model';\r\n\r\nconst routes = {\r\n  users: {\r\n    // getAll: (filters?: Map<string, string>) => (filters ? `/users?${filters.toSanitizedURLFilters()}` : `/users`),\r\n    login: () => `/token`,\r\n    accountData: () => `/api/Mobile/accountInfo`,\r\n    updateProfile: () => `/api/Mobile/studentprofileupdate`,\r\n    updatePhoto: () => `/api/Mobile/changephoto`,\r\n    changePassword: () => `/api/Mobile/changepassword`,\r\n  },\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  constructor(private httpDispatcher: HttpDispatcherService) {}\r\n\r\n  // Get list of all available routess\r\n  // getUsers(filters?: Map<string, string>): Observable<Credentials[]> {\r\n  //   return this.httpDispatcher.get<Credentials[]>(routes.users.getAll(filters));\r\n  // }\r\n\r\n  // Get authenticated user data\r\n  whoAmI(): Observable<any> {\r\n    return this.httpDispatcher.get(routes.users.accountData());\r\n  }\r\n\r\n  // Update profile\r\n  updateProfile(users: User): Observable<any> {\r\n    return this.httpDispatcher.put(routes.users.updateProfile(), users);\r\n  }\r\n\r\n  // Update photo\r\n  updatePhoto(users: User): Observable<any> {\r\n    return this.httpDispatcher.put(routes.users.updatePhoto(), users);\r\n  }\r\n\r\n  // Change password\r\n  changePassword(users: User): Observable<any> {\r\n    return this.httpDispatcher.get(routes.users.changePassword() + `?password=${users.Password}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { Shell } from '@app/shell/shell.service';\r\n\r\nconst routes: Routes = [\r\n  Shell.childRoutes([{ path: 'about', loadChildren: () => import('./about/about.module').then((m) => m.AboutModule) }]),\r\n  Shell.childRoutes([\r\n    {\r\n      path: '',\r\n      loadChildren: () => import('./pages/pages.module').then((m) => m.PagesModule),\r\n    },\r\n  ]),\r\n  // Fallback when no prior route is matched\r\n  { path: '**', redirectTo: '', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Inject, Injectable, InjectionToken, Injector, Optional, Type } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\r\nimport { CacheInterceptor } from './cache.interceptor';\r\nimport { ApiPrefixInterceptor } from './api-prefix.interceptor';\r\nimport { ApiAuthInterceptor } from './api-auth.interceptor';\r\n\r\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\r\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\r\ndeclare module '@angular/common/http/http' {\r\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\r\n  // HttpClient with HttpService using dependency injection\r\n  export interface HttpClient {\r\n    /**\r\n     * Enables caching for this request.\r\n     * @param forceUpdate Forces request to be made and updates cache entry.\r\n     * @return The new instance.\r\n     */\r\n    cache(forceUpdate?: boolean): HttpClient;\r\n\r\n    /**\r\n     * Skips default error handler for this request.\r\n     * @return The new instance.\r\n     */\r\n    skipErrorHandler(): HttpClient;\r\n\r\n    /**\r\n     * Do not use API prefix for this request.\r\n     * @return The new instance.\r\n     */\r\n    disableApiPrefix(): HttpClient;\r\n  }\r\n}\r\n\r\n// From @angular/common/http/src/interceptor: allows to chain interceptors\r\nclass HttpInterceptorHandler implements HttpHandler {\r\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\r\n\r\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\r\n    return this.interceptor.intercept(request, this.next);\r\n  }\r\n}\r\n\r\n/**\r\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\r\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\r\n * for better readability.\r\n *\r\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\r\n * HTTP_INTERCEPTORS token.\r\n */\r\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken<HttpInterceptor>('HTTP_DYNAMIC_INTERCEPTORS');\r\n\r\n/**\r\n * Extends HttpClient with per request configuration using dynamic interceptors.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpService extends HttpClient {\r\n  constructor(\r\n    private httpHandler: HttpHandler,\r\n    private injector: Injector,\r\n    @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []\r\n  ) {\r\n    super(httpHandler);\r\n\r\n    if (!this.interceptors) {\r\n      // Configure default interceptors that can be disabled here\r\n      this.interceptors = [\r\n        this.injector.get(ApiPrefixInterceptor),\r\n        this.injector.get(ApiAuthInterceptor),\r\n        this.injector.get(ErrorHandlerInterceptor),\r\n      ];\r\n    }\r\n  }\r\n\r\n  cache(forceUpdate?: boolean): HttpClient {\r\n    const cacheInterceptor = this.injector\r\n      .get(CacheInterceptor as Type<CacheInterceptor>)\r\n      .configure({ update: forceUpdate });\r\n    return this.addInterceptor(cacheInterceptor);\r\n  }\r\n\r\n  skipErrorHandler(): HttpClient {\r\n    return this.removeInterceptor(ErrorHandlerInterceptor);\r\n  }\r\n\r\n  disableApiPrefix(): HttpClient {\r\n    return this.removeInterceptor(ApiPrefixInterceptor);\r\n  }\r\n\r\n  // Override the original method to wire interceptors when triggering the request.\r\n  request(method?: any, url?: any, options?: any): any {\r\n    const handler = this.interceptors.reduceRight(\r\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\r\n      this.httpHandler\r\n    );\r\n    return new HttpClient(handler).request(method, url, options);\r\n  }\r\n\r\n  private removeInterceptor(interceptorType: Type<HttpInterceptor>): HttpService {\r\n    return new HttpService(\r\n      this.httpHandler,\r\n      this.injector,\r\n      this.interceptors.filter((i) => !(i instanceof interceptorType))\r\n    );\r\n  }\r\n\r\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\r\n    return new HttpService(this.httpHandler, this.injector, this.interceptors.concat([interceptor]));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\nimport { Logger } from '../logger.service';\r\n\r\nconst log = new Logger('HttpCacheService');\r\nconst cachePersistenceKey = 'httpCache';\r\n\r\nexport interface HttpCacheEntry {\r\n  lastUpdated: Date;\r\n  data: HttpResponse<any>;\r\n}\r\n\r\n/**\r\n * Provides a cache facility for HTTP requests with configurable persistence policy.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpCacheService {\r\n  private cachedData: { [key: string]: HttpCacheEntry } = {};\r\n  private storage: Storage | null = null;\r\n\r\n  constructor() {\r\n    this.loadCacheData();\r\n  }\r\n\r\n  /**\r\n   * Sets the cache data for the specified request.\r\n   * @param url The request URL.\r\n   * @param data The received data.\r\n   * @param lastUpdated The cache last update, current date is used if not specified.\r\n   */\r\n  setCacheData(url: string, data: HttpResponse<any>, lastUpdated?: Date) {\r\n    this.cachedData[url] = {\r\n      lastUpdated: lastUpdated || new Date(),\r\n      data,\r\n    };\r\n    log.debug(`Cache set for key: \"${url}\"`);\r\n    this.saveCacheData();\r\n  }\r\n\r\n  /**\r\n   * Gets the cached data for the specified request.\r\n   * @param url The request URL.\r\n   * @return The cached data or null if no cached data exists for this request.\r\n   */\r\n  getCacheData(url: string): HttpResponse<any> | null {\r\n    const cacheEntry = this.cachedData[url];\r\n\r\n    if (cacheEntry) {\r\n      log.debug(`Cache hit for key: \"${url}\"`);\r\n      return cacheEntry.data;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Gets the cached entry for the specified request.\r\n   * @param url The request URL.\r\n   * @return The cache entry or null if no cache entry exists for this request.\r\n   */\r\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\r\n    return this.cachedData[url] || null;\r\n  }\r\n\r\n  /**\r\n   * Clears the cached entry (if exists) for the specified request.\r\n   * @param url The request URL.\r\n   */\r\n  clearCache(url: string): void {\r\n    delete this.cachedData[url];\r\n    log.debug(`Cache cleared for key: \"${url}\"`);\r\n    this.saveCacheData();\r\n  }\r\n\r\n  /**\r\n   * Cleans cache entries older than the specified date.\r\n   * @param expirationDate The cache expiration date. If no date is specified, all cache is cleared.\r\n   */\r\n  cleanCache(expirationDate?: Date) {\r\n    if (expirationDate) {\r\n      Object.entries(this.cachedData).forEach(([key, value]) => {\r\n        if (expirationDate >= value.lastUpdated) {\r\n          delete this.cachedData[key];\r\n        }\r\n      });\r\n    } else {\r\n      this.cachedData = {};\r\n    }\r\n    this.saveCacheData();\r\n  }\r\n\r\n  /**\r\n   * Sets the cache persistence policy.\r\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\r\n   * @param persistence How the cache should be persisted, it can be either local or session storage, or if no value is\r\n   *   provided it will be only in-memory (default).\r\n   */\r\n  setPersistence(persistence?: 'local' | 'session') {\r\n    this.cleanCache();\r\n    this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\r\n    this.loadCacheData();\r\n  }\r\n\r\n  private saveCacheData() {\r\n    if (this.storage) {\r\n      this.storage.setItem(cachePersistenceKey, JSON.stringify(this.cachedData));\r\n    }\r\n  }\r\n\r\n  private loadCacheData() {\r\n    const data = this.storage ? this.storage.getItem(cachePersistenceKey) : null;\r\n    this.cachedData = data ? JSON.parse(data) : {};\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpSentEvent,\r\n  HttpProgressEvent,\r\n  HttpUserEvent,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Logger } from '../logger.service';\r\nimport { environment } from '@env/environment';\r\n\r\nconst log = new Logger('Error Handler Interceptor');\r\n\r\n/**\r\n * Adds a default error handler to all requests.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n  error: any;\r\n  isRefreshingToken: boolean = false;\r\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n  constructor() {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any> | HttpSentEvent | HttpProgressEvent | HttpUserEvent<any> | any> {\r\n    return next.handle(request).pipe(catchError((error) => this.errorHandler(error)));\r\n  }\r\n\r\n  // Customize the default error handler here if needed\r\n  private errorHandler(response: any): Observable<HttpEvent<any>> {\r\n    if (response === undefined) {\r\n      throw 'Unable to establish connectiion with API..!';\r\n    }\r\n\r\n    // If Validation error\r\n    else if (response.status === 400 || response.status === 422) {\r\n      this.error = response.error.error;\r\n      throw this.error;\r\n    } else if (response.status === 401) {\r\n      // Unauthenticated\r\n      this.error = response.error.error;\r\n      throw this.error;\r\n    } else if (response.status === 403) {\r\n      // Unauthorised Access\r\n      this.error = response.error.error;\r\n      throw this.error;\r\n    }\r\n\r\n    // if (response.status === 440) {\r\n    //   // Session Expired\r\n    //   this.error = 'Session Expired';\r\n    //   this.authenticationService.logout();\r\n    // }\r\n\r\n    if (!environment.production) {\r\n      if (response.error instanceof ErrorEvent) {\r\n        log.error('Error Event: ', response.error);\r\n        // Log client-side or network error\r\n        this.error = response.error?.error.message ? response.error.error.message : 'Something went wrong!';\r\n      } else {\r\n        log.error('Error Event Else: ', response.error);\r\n        // Log server-side error [The response body may contain clues as to what went wrong]\r\n        this.error = response.error?.error?.message;\r\n      }\r\n    }\r\n\r\n    throw this.error;\r\n  }\r\n}\r\n","/*\r\n * Entry point of the application.\r\n * Only platform bootstrapping code should be here.\r\n * For app-specific initialization, use `app/app.component.ts`.\r\n */\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from '@app/app.module';\r\nimport { environment } from '@env/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}